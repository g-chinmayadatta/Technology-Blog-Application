@using Microsoft.AspNetCore.Identity
@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@

@model Bloggie.Web.Models.ViewModels.BlogDetailsViewModel
@inject SignInManager<IdentityUser> signInManager // to check user is login or not
@inject UserManager<IdentityUser> userManager   // to check which user login
@{
	ViewData["Title"] = Model.PageTitle;
}

<div class="container my-5">
	<div class="row justify-content-center">
		<div class="col-12 col-lg-6">
			@if (Model != null)
			{
				<h1 class="mb-3">@Model.Heading</h1>
				<div class="d-flex justify-content-between mb-3">
					<span class="text-secondary">@Model.Author</span>
					<span class="text-secondary">@Model.PublishedDate.ToShortDateString()</span>
				</div>
				<div class="mb-3">
					@if (signInManager.IsSignedIn(User))
					{
						if (Model.Liked)
						{
							<a id="btnlike" style="cursor:pointer">
								<i class="bi bi-hand-thumbs-up-fill"></i>
							</a>
						}
						else
						{
							<a id="btnlike" style="cursor:pointer">
								<i class="bi bi-hand-thumbs-up"></i>
							</a>
						}

					}

					<span id="totalLikes">@Model.TotalLikes </span> Likes
				</div>
				<div class="mb-3 d-flex">
					@foreach (var tag in Model.Tags)
					{
						<span class="badge bg-secondary me-1">@tag.Name</span>
					}
				</div>
				<img src="@Model.FeaturedImageUrl" class="img-fluid d-block mb-3" />
				<div class="mb-3 blog-detail-content">
					@Html.Raw(Model.Content)
				</div>
				<div class="card">
					<div class="card-header">
						<h5>Comments</h5>
						@if (signInManager.IsSignedIn(User))
						{
							<form method="post">
								<div class="mb-3">
									<label class="form-label">Comment Desctiption</label>
									<input type="text" class="form-control" asp-for="Comment" />
								</div>
								<div class="mb-3">
									<button class="btn btn-dark" type="submit">Submit</button>
									<input type="hidden" asp-for="Id" />
									<input type="hidden" asp-for="UrlHandle" />
								</div>
							</form>
						}
					</div>
					<div class="card-body">
						@if (Model.Comments != null && Model.Comments.Any())
						{
							foreach (var comment in Model.Comments)
							{
								<div class="card mb-3">
									<div class="card-body">
										@comment.Description
										<div class="d-flex justify-content-between">
											<span class="text-secondary">@comment.UserName</span>
											<span class="text-secondary">@comment.DateAdded.ToShortDateString()</span>
										</div>
									</div>
								</div>
							}


						}
					</div>
				</div>

			}
			else
			{
				<p>BlogPost not Found!</p>
			}
		</div>
	</div>
</div>
@section Scripts {
	<script>
		const btnLikeElement = document.getElementById("btnlike");
		const totalLikeElement = document.getElementById("totalLikes")
		async function getTotalLikes() {
			fetch('api/BlogPostLike/{@Model.Id}/totalLikes', {
				method: 'GET',
				headers: {
					'content-Type': 'application/json',
					'Accept': '*/*'
				}
			}).then(data => data.json())
				.then(result => totalLikeElement.innerHTML = result)
		}
		function addLikeforBlog() {
			fetch('/api/BlogPostLike/Add',
				{
					method: 'POST',
					headers: {
						'content-Type': 'application/json',
						'Accept': '*/*'
					},
					body: JSON.stringify({
						blogPostId: '@Model.Id',
						userId: '@userManager.GetUserId(User)'
					})
				}).then(() => {
					btnLikeElement.innerHTML = '<i class="bi bi-hand-thumbs-up-fill" > </i>';
					btnLikeElement.removeEventListener('click', addLikeforBlog);
					getTotalLikes();

				})
		}
		btnLikeElement.addEventListener('click', addLikeforBlog)

	</script>
}